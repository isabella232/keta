"use strict";angular.module("keta",["keta.directives.ExtendedTable","keta.directives.MainMenu","keta.directives.Sidebar","keta.directives.WorldBar","keta.filters.OrderObjectBy","keta.filters.Slice","keta.filters.Unit","keta.services.AccessToken","keta.services.AppContext","keta.services.DeviceEvent","keta.services.DeviceSet","keta.services.Device","keta.services.EventBusDispatcher","keta.services.EventBusManager","keta.services.EventBus","keta.services.Logger","keta.services.TagSet","keta.services.Tag","keta.shared"]),angular.module("keta.directives.ExtendedTable",["ngSanitize","keta.shared","keta.filters.OrderObjectBy","keta.filters.Slice"]).directive("extendedTable",function($compile,$filter,ketaSharedConfig){return{restrict:"EA",replace:!0,scope:{rows:"=",labels:"=?",disabledComponents:"=?",switchableColumns:"=?",visibleColumns:"=?",headerLabelCallback:"=?",operationsMode:"=?",rowSortEnabled:"=?",rowSortCriteria:"=?",rowSortOrderAscending:"=?",actionList:"=?",cellRenderer:"=?",columnClassCallback:"=?",pager:"=?",search:"=?"},templateUrl:"/components/directives/extended-table.html",link:function(scope){var defaultLabels={ADD_COLUMN:"Add column"};scope.labels=angular.extend(defaultLabels,scope.labels),scope.headers=angular.isDefined(scope.rows)&&angular.isDefined(scope.rows[0])?scope.rows[0]:{},scope.disabledComponents=scope.disabledComponents||[scope.COMPONENTS_FILTER,scope.COMPONENTS_SELECTOR,scope.COMPONENTS_PAGER],scope.switchableColumns=scope.switchableColumns||[],scope.visibleColumns=scope.visibleColumns||(angular.isDefined(scope.rows)&&angular.isDefined(scope.rows[0])?Object.keys(scope.rows[0]):[]),scope.headerLabelCallback=scope.headerLabelCallback||function(column){return column},scope.operationsMode=scope.operationsMode||scope.OPERATIONS_MODE_VIEW,scope.rowSortEnabled=angular.isDefined(scope.rowSortEnabled)?scope.rowSortEnabled:!1,scope.rowSortCriteria=scope.rowSortCriteria||(angular.isDefined(scope.rows)&&angular.isDefined(scope.rows[0])?Object.keys(scope.rows[0])[0]:null),scope.rowSortOrderAscending=angular.isDefined(scope.rowSortOrderAscending)?scope.rowSortOrderAscending:!0,scope.actionList=scope.actionList||[],scope.cellRenderer=scope.cellRenderer||function(row,column){return angular.isDefined(row[column])?row[column]:null},scope.columnClassCallback=scope.columnClassCallback||function(){return""};var defaultPager={};defaultPager[scope.PAGER_TOTAL]=angular.isArray(scope.rows)?scope.rows.length:0,defaultPager[scope.PAGER_LIMIT]=angular.isArray(scope.rows)?scope.rows.length:0,defaultPager[scope.PAGER_OFFSET]=0,scope.pager=scope.pager||defaultPager,scope.search=scope.search||null;var update=function(){angular.isDefined(scope.rows)&&angular.isDefined(scope.rows[0])&&(angular.equals(scope.headers,{})&&(scope.headers=scope.rows[0]),angular.equals(scope.visibleColumns,[])&&(scope.visibleColumns=Object.keys(scope.rows[0])),null===scope.rowSortCriteria&&(scope.rowSortCriteria=Object.keys(scope.rows[0])[0]))};scope.$watchCollection("rows",function(newValue,oldValue){null!==newValue&&newValue!==oldValue&&update()})},controller:function($scope){$scope.COMPONENTS_FILTER=ketaSharedConfig.EXTENDED_TABLE.COMPONENTS.FILTER,$scope.COMPONENTS_SELECTOR=ketaSharedConfig.EXTENDED_TABLE.COMPONENTS.SELECTOR,$scope.COMPONENTS_TABLE=ketaSharedConfig.EXTENDED_TABLE.COMPONENTS.TABLE,$scope.COMPONENTS_PAGER=ketaSharedConfig.EXTENDED_TABLE.COMPONENTS.PAGER,$scope.OPERATIONS_MODE_DATA=ketaSharedConfig.EXTENDED_TABLE.OPERATIONS_MODE.DATA,$scope.OPERATIONS_MODE_VIEW=ketaSharedConfig.EXTENDED_TABLE.OPERATIONS_MODE.VIEW,$scope.PAGER_TOTAL=ketaSharedConfig.EXTENDED_TABLE.PAGER.TOTAL,$scope.PAGER_LIMIT=ketaSharedConfig.EXTENDED_TABLE.PAGER.LIMIT,$scope.PAGER_OFFSET=ketaSharedConfig.EXTENDED_TABLE.PAGER.OFFSET;var inArray=function(array,key){var found=!1;return angular.forEach(array,function(item){item===key&&(found=!0)}),found};$scope.isDisabled=function(key){return inArray($scope.disabledComponents,key)},$scope.isSwitchable=function(key){return inArray($scope.switchableColumns,key)},$scope.isSortCriteria=function(key){var criteria=angular.isDefined($scope.rowSortCriteria)?$scope.rowSortCriteria:null;return null===criteria||"+"!==criteria[0]&&"-"!==criteria[0]||(criteria=criteria.substr(1)),key===criteria},$scope.pages=[],$scope.currentPage=0;var resetPager=function(){if(angular.isDefined($scope.pager)&&null!==$scope.pager){if($scope.operationsMode===$scope.OPERATIONS_MODE_VIEW){var rows=$scope.rows||[],rowsLength=$filter("filter")(rows,$scope.search).length;$scope.pager[$scope.PAGER_TOTAL]=rowsLength,0===$scope.pager[$scope.PAGER_LIMIT]&&($scope.pager[$scope.PAGER_LIMIT]=rowsLength),$scope.pager[$scope.PAGER_OFFSET]>rowsLength-1&&($scope.pager[$scope.PAGER_OFFSET]=0)}if(angular.isNumber($scope.pager[$scope.PAGER_TOTAL])&&angular.isNumber($scope.pager[$scope.PAGER_LIMIT])){$scope.pages=[];for(var numOfPages=Math.ceil($scope.pager[$scope.PAGER_TOTAL]/$scope.pager[$scope.PAGER_LIMIT]),i=0;numOfPages>i;i++)$scope.pages.push(i+1)}angular.isNumber($scope.pager[$scope.PAGER_LIMIT])&&angular.isNumber($scope.pager[$scope.PAGER_OFFSET])&&($scope.currentPage=Math.floor($scope.pager[$scope.PAGER_OFFSET]/$scope.pager[$scope.PAGER_LIMIT])+1)}};$scope.$watch("rows.length",function(newValue,oldValue){null!==newValue&&newValue!==oldValue&&resetPager()}),$scope.$watch("pager",function(newValue,oldValue){null!==newValue&&newValue!==oldValue&&resetPager()},!0),$scope.$watch("search",function(newValue,oldValue){null!==newValue&&newValue!==oldValue&&resetPager()}),resetPager(),$scope.sortBy=function(column){$scope.rowSortEnabled&&null!==$scope.headerLabelCallback(column)&&($scope.rowSortCriteria===column?$scope.rowSortOrderAscending=!$scope.rowSortOrderAscending:$scope.rowSortCriteria=column)},$scope.selectedColumn=null;var resetSelectedColumn=function(){var possibleColumns=$filter("filter")($scope.switchableColumns,$scope.filterColumns);inArray(possibleColumns,$scope.selectedColumn)||($scope.selectedColumn=angular.isDefined(possibleColumns[0])?possibleColumns[0]:null)};$scope.$watch("switchableColumns.length",function(newValue,oldValue){null!==newValue&&newValue!==oldValue&&resetSelectedColumn()}),$scope.filterColumns=function(column){return!inArray($scope.visibleColumns,column)},$scope.addColumn=function(column){$scope.visibleColumns.push(column),resetSelectedColumn()},$scope.removeColumn=function(column){var columns=[];angular.forEach($scope.visibleColumns,function(col){col!==column&&columns.push(col)}),$scope.visibleColumns=columns,resetSelectedColumn()},$scope.goToPage=function(page){$scope.pager[$scope.PAGER_OFFSET]=$scope.pager[$scope.PAGER_LIMIT]*(page-1),resetPager()}}}}),angular.module("keta.directives.ExtendedTable").run(function($templateCache){$templateCache.put("/components/directives/extended-table.html","<div data-ng-class=\"{	'keta-extended-table': true,	'table-responsive': true,	'table-data': true}\">"+'	<div class="row" data-ng-show="!isDisabled(COMPONENTS_FILTER) || isDisabled(COMPONENTS_SELECTOR)">		<div class="col-xs-12 col-sm-6">					<!-- FILTER -->			<div data-ng-show="!isDisabled(COMPONENTS_FILTER)">				<div class="form-group form-inline">					<div class="input-group col-xs-12 col-sm-8 col-md-6">						<input type="text" class="form-control" placeholder="Search" data-ng-model="search">						<div class="input-group-addon"><span class="glyphicon glyphicon-search"></span></div>					</div>				</div>			</div>					</div>		<div class="col-xs-12 col-sm-6 pull-right">						<!-- SELECTOR -->			<div data-ng-show="!isDisabled(COMPONENTS_SELECTOR)">				<div class="form-group form-inline pull-right" data-ng-show="selectedColumn !== null">					<label for="columnSelector">{{ labels.ADD_COLUMN }}</label>					<select id="columnSelector" class="form-control"						data-ng-model="selectedColumn"						data-ng-options="							column as headerLabelCallback(column) for column in switchableColumns |							filter:filterColumns">					</select>					<button type="button" class="btn btn-primary" data-ng-click="addColumn(selectedColumn)">						<i class="glyphicon glyphicon-plus"></i>					</button>				</div>				<div class="form-group form-inline pull-right">					<span class="form-group-label">&nbsp;</span>				</div>			</div>					</div>	</div>		<!-- TABLE -->	<div class="row" data-ng-show="!isDisabled(COMPONENTS_TABLE)">		<div class="col-xs-12">			<table class="table table-striped form-group">				<thead>					<tr>						<th class="{{columnClassCallback(headers, column, true)}} sortable"							data-ng-repeat="column in headers | orderObjectBy:visibleColumns:true"							data-ng-if="rowSortEnabled"							data-ng-class="{sort: isSortCriteria(column)}"							data-ng-click="sortBy(column)">							<a class="header">{{headerLabelCallback(column)}}</a>							<a data-ng-if="isSortCriteria(column) && rowSortOrderAscending">								<span class="glyphicon glyphicon-sort-by-attributes"></span>							</a>							<a data-ng-if="isSortCriteria(column) && !rowSortOrderAscending">								<span class="glyphicon glyphicon-sort-by-attributes-alt"></span>							</a>							<span data-ng-if="!isSortCriteria(column) && headerLabelCallback(column) !== null"								class="glyphicon glyphicon-sort"></span>							<a class="operation" data-ng-if="isSwitchable(column)" data-ng-click="removeColumn(column)">								<span class="glyphicon glyphicon-minus"></span>							</a>						</th>						<th class="{{columnClassCallback(headers, column, true)}}"							data-ng-repeat="column in headers | orderObjectBy:visibleColumns:true"							data-ng-if="!rowSortEnabled">							{{headerLabelCallback(column)}}							<a class="operation" data-ng-if="isSwitchable(column)" data-ng-click="removeColumn(column)">								<span class="glyphicon glyphicon-minus"></span>							</a>						</th>						<th data-ng-if="actionList.length">							{{headerLabelCallback(\'actions\')}}						</th>					</tr>				</thead>				<tbody>					<!-- operationsMode: data -->					<tr data-ng-if="operationsMode === OPERATIONS_MODE_DATA"						data-ng-repeat="row in rows">						<td data-ng-repeat="column in row | orderObjectBy:visibleColumns:true"							class="{{columnClassCallback(row, column, false)}}">							<span data-ng-bind-html="cellRenderer(row, column)"></span>						</td>						<td data-ng-if="row && actionList.length" class="table-action">							<div class="btn-group" role="group">								<a data-ng-repeat="item in actionList"								   role="button"								   class="btn-link"								   data-ng-href="{{item.getLink(row)}}"								   title="{{item.label}}">									<span class="{{item.icon}}"></span>								</a>							</div>						</td>					</tr>					<!-- operationsMode: view -->					<tr data-ng-if="operationsMode === OPERATIONS_MODE_VIEW"						data-ng-repeat="							row in rows |							filter:search |							orderBy:rowSortCriteria:!rowSortOrderAscending |							slice:pager[PAGER_OFFSET]:pager[PAGER_LIMIT]">						<td data-ng-repeat="column in row |	orderObjectBy:visibleColumns:true"							class="{{columnClassCallback(row, column, false)}}">							<span data-ng-bind-html="cellRenderer(row, column)"></span>						</td>						<td data-ng-if="row && actionList.length" class="table-action">							<div class="btn-group" role="group">								<a data-ng-repeat="item in actionList"								   		role="button"										class="btn-link"										data-ng-href="{{item.getLink(row)}}"										title="{{item.label}}">									<span class="{{item.icon}}"></span>								</a>							</div>						</td>					</tr>				</tbody>			</table>		</div>	</div>		<!-- PAGER -->	<div class="row" data-ng-show="!isDisabled(COMPONENTS_PAGER) && pager !== null">		<div class="col-xs-12 col-sm-6">			<div class="btn-group form-group" role="group">				<button type="button"					data-ng-repeat="page in pages"					data-ng-click="goToPage(page)"					data-ng-class="{						\'btn\': true,						\'btn-default\': true,						\'btn-primary\': page === currentPage					}">{{page}}</button>			</div>		</div>	</div>	</div>')}),angular.module("keta.directives.MainMenu",[]).directive("mainMenu",function($location){return{restrict:"EA",replace:!0,scope:{configuration:"="},templateUrl:"/components/directives/main-menu.html",link:function(scope){function checkPaths(currentMenuLevelParts,locationLevelParts,activeFlag){for(var i=1;i<currentMenuLevelParts.length;i++)currentMenuLevelParts[i]!==locationLevelParts[i]&&(activeFlag=!1);return activeFlag}scope.compactMode=angular.isDefined(scope.configuration.compactMode)?scope.configuration.compactMode:!1,scope.isActive=function(menuEntry){var currentMenuLevelParts=menuEntry.link.split("/"),locationLevelParts=$location.path().split("/"),isActive=!0;return scope.compactMode===!0?currentMenuLevelParts[1]===locationLevelParts[1]:angular.isArray(menuEntry.items)&&menuEntry.items.length>0?!1:isActive=checkPaths(currentMenuLevelParts,locationLevelParts,isActive)},scope.isActiveParent=function(menuEntry){var currentMenuLevelParts=menuEntry.link.split("/"),locationLevelParts=$location.path().split("/"),isActiveParent=!1;return angular.isArray(menuEntry.items)&&menuEntry.items.length>0&&(isActiveParent=!0,isActiveParent=checkPaths(currentMenuLevelParts,locationLevelParts,isActiveParent)),isActiveParent},scope.checkExpand=function(menuEntry,$event){scope.compactMode===!1?angular.isArray(menuEntry.items)&&menuEntry.items.length>0&&($event.preventDefault(),menuEntry.expanded=angular.isUndefined(menuEntry.expanded)||menuEntry.expanded===!1?!0:!menuEntry.expanded):angular.isArray(menuEntry.items)&&menuEntry.items.length>0&&($event.preventDefault(),$location.path(menuEntry.items[0].link))}}}}),angular.module("keta.directives.MainMenu").run(function($templateCache){$templateCache.put("/components/directives/main-menu.html","<ul data-ng-class=\"{	'nav': true,	'nav-pills': true,	'nav-stacked': true,	'nav-extended': !compactMode,	'nav-compact': compactMode,	'keta-main-menu': true}\">	<li data-ng-repeat=\"entry in configuration.items\"		data-ng-class=\"{			'active': isActive(entry),			'active-parent': isActiveParent(entry)		}\">"+'		<a data-ng-href="#{{ entry.link }}" data-ng-click="checkExpand(entry, $event)"		   title="{{ compactMode ? entry.name : \'\' }}">			<span class="glyphicon glyphicon-{{ entry.icon }}"></span>			<span class="list-item" data-ng-if="!compactMode">{{ entry.name }}</span>			<span class="expander glyphicon"				data-ng-if="entry.items && !compactMode"				data-ng-class="{ \'glyphicon-minus\': entry.expanded, \'glyphicon-plus\': !entry.expanded }">			</span>		</a>		<ul class="nav nav-pills nav-stacked expanded" data-ng-show="entry.expanded && !compactMode">			<li data-ng-repeat="entryLevel2 in entry.items"				data-ng-class="{					\'active\': isActive(entryLevel2),					\'active-parent\': isActiveParent(entryLevel2)				}">				<a data-ng-href="#{{ entryLevel2.link }}" data-ng-click="checkExpand(entryLevel2, $event)">					<span data-ng-if="!compactMode">{{ entryLevel2.name }}</span>					<span class="expander glyphicon"						data-ng-if="entryLevel2.items && !compactMode"						data-ng-class="{ \'glyphicon-minus\': entryLevel2.expanded, \'glyphicon-plus\': !entryLevel2.expanded }">					</span>				</a>				<ul class="nav nav-pills nav-stacked expanded" data-ng-show="entryLevel2.expanded && !compactMode">					<li data-ng-repeat="entryLevel3 in entryLevel2.items"						data-ng-class="{ \'active\': isActive(entryLevel3) }">						<a data-ng-href="#{{ entryLevel3.link }}">							<span data-ng-if="!compactMode">{{ entryLevel3.name }}</span>						</a>					</li>				</ul>			</li>		</ul>	</li></ul>')}),angular.module("keta.directives.Sidebar",["keta.shared"]).directive("sidebar",function($document,ketaSharedConfig){return{restrict:"EA",replace:!0,scope:{configuration:"="},templateUrl:"/components/directives/sidebar.html",transclude:!0,link:function(scope,element){scope.configuration.position=angular.isDefined(scope.configuration.position)?scope.configuration.position:ketaSharedConfig.SIDEBAR.POSITION_LEFT,scope.showToggleArea=angular.isDefined(scope.configuration.label),scope.toggleAreaTop=0,scope.transcludeTop=0;var bodyElem=angular.element(document).find("body");scope.toggleSideBar=function(){bodyElem.toggleClass(ketaSharedConfig.SIDEBAR.CSS_OFFCANVAS+"-"+scope.configuration.position)},scope.$on("$locationChangeStart",function(){bodyElem.removeClass(ketaSharedConfig.SIDEBAR.CSS_OFFCANVAS+"-"+scope.configuration.position)});var toggleBodyClass=function(position){scope.configuration.position===position&&bodyElem.toggleClass(ketaSharedConfig.SIDEBAR.CSS_OFFCANVAS+"-"+scope.configuration.position)};if(scope.$on(ketaSharedConfig.EVENTS.TOGGLE_SIDEBAR_LEFT,function(){toggleBodyClass(ketaSharedConfig.SIDEBAR.POSITION_LEFT)}),scope.$on(ketaSharedConfig.EVENTS.TOGGLE_SIDEBAR_RIGHT,function(){toggleBodyClass(ketaSharedConfig.SIDEBAR.POSITION_RIGHT)}),scope.showToggleArea){var brandBarElem=bodyElem[0].getElementsByClassName(ketaSharedConfig.SIDEBAR.CSS_BRAND_BAR),brandBarHeight=angular.isDefined(brandBarElem[0])?brandBarElem[0].clientHeight:0;scope.toggleAreaTop=brandBarHeight+ketaSharedConfig.SIDEBAR.TOGGLE_AREA_OFFSET,scope.transcludeTop=ketaSharedConfig.SIDEBAR.TRANSCLUDE_OFFSET}$document.bind("click",function(event){if(bodyElem.hasClass(ketaSharedConfig.SIDEBAR.CSS_OFFCANVAS+"-"+scope.configuration.position)){var sideBarHtml=element.html(),targetElementHtml=angular.element(event.target).html();if(-1!==sideBarHtml.indexOf(targetElementHtml))return;scope.toggleSideBar()}})}}}),angular.module("keta.directives.Sidebar").run(function($templateCache){$templateCache.put("/components/directives/sidebar.html",'<div class="sidebar-offcanvas sidebar-{{configuration.position}} keta-sidebar">	<div class="sidebar-inner">				<!-- extended navigation -->		<ul class="nav nav-pills nav-stacked nav-extended nav-extended-toggle"			data-ng-if="showToggleArea" data-ng-style="{marginTop: toggleAreaTop + \'px\'}">			<li>				<a href="" data-ng-click="toggleSideBar()">					<span class="glyphicon glyphicon-align-justify"></span>					<span>{{ configuration.label }}</span>				</a>			</li>		</ul>				<!-- compact navigation -->		<ul class="nav nav-pills nav-stacked nav-compact nav-compact-toggle"			data-ng-if="showToggleArea">			<li>				<a href="" data-ng-click="toggleSideBar()">					<span class="glyphicon glyphicon-align-justify"></span>				</a>			</li>		</ul>				<!--  transcluded content -->		<div data-ng-transclude class="sidebar-transclude" data-ng-style="{marginTop: transcludeTop + \'px\'}"></div>			</div></div>')}),angular.module("keta.directives.WorldBar",["keta.shared","keta.services.EventBusDispatcher","keta.services.EventBusManager"]).directive("worldBar",function($rootScope,$document,EventBusDispatcher,EventBusManager,ketaSharedConfig){return{restrict:"EA",replace:!0,scope:{eventBusId:"=?",locales:"=?",currentLocale:"=?",labels:"=?",links:"=?"},templateUrl:"/components/directives/world-bar.html",link:function(scope,element){function closeAllMenus(){scope.menus.contextSwitcher.isOpen=!1,scope.menus.userMenu.isOpen=!1,scope.menus.energyManagerMenu.isOpen=!1,scope.menus.settingsMenu.isOpen=!1,scope.menus.languageMenu.isOpen=!1}scope.eventBusId=scope.eventBusId||"kiwibus",scope.eventBus=EventBusManager.get(scope.eventBusId),scope.locales=scope.locales||[{name:"English",nameShort:"EN",code:"en"}],scope.currentLocale=scope.currentLocale||"en";var defaultLabels={ALL_APPS:"All Apps",ENERGY_MANAGER:"Energy-Manager",ALL_ENERGY_MANAGERS:"All Energy-Managers",USER_PROFILE:"User Profile",USER_LOGOUT:"Logout"};scope.labels=angular.isDefined(scope.labels)?angular.extend(defaultLabels,scope.labels):defaultLabels;var defaultLinks={ALL_APPS:null,ALL_ENERGY_MANAGERS:null,USER_PROFILE:null,USER_LOGOUT:null};scope.links=angular.isDefined(scope.links)?angular.extend(defaultLinks,scope.links):defaultLinks,scope.TYPES={APPS:"APPS",ENERGY_MANAGER:"ENERGY_MANAGER"},scope.LIMITS={APPS:3,ENERGY_MANAGER:3};var PREDICATES={APPS:{field:"name",reverse:!1},ENERGY_MANAGER:{field:"name",reverse:!1}};scope.menus={contextSwitcher:{activeEntry:null,isOpen:!1},userMenu:{activeEntry:null,isOpen:!1},energyManagerMenu:{activeEntry:null,isOpen:!1},settingsMenu:{activeEntry:null,isOpen:!1},languageMenu:{activeEntry:null,isOpen:!1}},scope.worlds=[{name:"Desktop",link:"https://cloud.mycompany.com"},{name:"Market",link:"https://market.mycompany.com"},{name:"Service",link:"https://service.mycompany.com"}],scope.apps=[],null!==scope.eventBus&&EventBusDispatcher.send(scope.eventBus,"applications",{action:"getApplications"},function(reply){200===reply.code&&(scope.apps=reply.result.items,scope.$digest())}),scope.user={},null!==scope.eventBus&&EventBusDispatcher.send(scope.eventBus,"users",{action:"getCurrentUser"},function(reply){200===reply.code&&(scope.user=reply.result,scope.$digest())}),scope.energyManagers=[],null!==scope.eventBus&&EventBusDispatcher.send(scope.eventBus,"devices",{action:"getDevices",params:{deviceClass:ketaSharedConfig.DEVICE_CLASSES.ENERGY_MANAGER}},function(reply){if(200===reply.code){var energyManagers=[];angular.forEach(reply.result.items,function(item){energyManagers.push({name:item.tagValues.IdName.value,link:"http://"+item.currentAddress})}),scope.energyManagers=energyManagers,scope.$digest()}}),scope.order=function(type){var field=angular.isDefined(PREDICATES[type])?PREDICATES[type].field:"name";return function(item){return angular.isDefined(item[field])?item[field]:""}},scope.reverse=function(type){return angular.isDefined(PREDICATES[type])&&angular.isDefined(PREDICATES[type].reverse)?PREDICATES[type].reverse:!1};var initActiveEntries=function(){angular.isDefined(scope.worlds[0])&&(scope.menus.contextSwitcher.activeEntry=scope.worlds[0]),angular.forEach(scope.locales,function(locale){angular.isDefined(locale.code)&&locale.code===scope.currentLocale&&(scope.menus.languageMenu.activeEntry=locale)})};initActiveEntries(),scope.toggleSidebar=function($event,position){$event.stopPropagation(),position===ketaSharedConfig.SIDEBAR.POSITION_LEFT?$rootScope.$broadcast(ketaSharedConfig.EVENTS.TOGGLE_SIDEBAR_LEFT):position===ketaSharedConfig.SIDEBAR.POSITION_RIGHT&&$rootScope.$broadcast(ketaSharedConfig.EVENTS.TOGGLE_SIDEBAR_RIGHT)},scope.isOpen=function(menuName){return angular.isDefined(scope.menus[menuName])?scope.menus[menuName].isOpen:null},scope.isActive=function(menuName,entry){return angular.isDefined(scope.menus[menuName])&&scope.menus[menuName].activeEntry===entry},scope.setLocale=function(locale){scope.currentLocale=locale.code,scope.menus.languageMenu.activeEntry=locale,closeAllMenus()},scope.toggleOpenState=function(menuName){if(angular.isDefined(scope.menus[menuName])){var currentState=angular.copy(scope.menus[menuName].isOpen);closeAllMenus(),currentState===scope.menus[menuName].isOpen&&(scope.menus[menuName].isOpen=!scope.menus[menuName].isOpen)}},scope.$on("$locationChangeStart",function(){closeAllMenus()}),$document.bind("click",function(event){var worldBarHtml=element.html(),targetElementHtml=angular.element(event.target).html();-1===worldBarHtml.indexOf(targetElementHtml)&&(closeAllMenus(),scope.$digest())})}}}),angular.module("keta.directives.WorldBar").run(function($templateCache){$templateCache.put("/components/directives/world-bar.html",'<div class="container-fluid keta-world-bar">	<ul class="nav navbar-nav">		<li class="menu-navbar">			<a href="" data-ng-click="toggleSidebar($event, \'left\')">				<span class="glyphicon glyphicon-align-justify"></span>			</a>		</li>		<li class="dropdown context-switcher" data-ng-class="{ open: isOpen(\'contextSwitcher\') }">			<a href="" data-ng-click="toggleOpenState(\'contextSwitcher\')">				{{ menus.contextSwitcher.activeEntry.name }}				<span class="caret"></span>			</a>			<ul class="dropdown-menu">				<li data-ng-repeat="entry in worlds"					data-ng-class="{ active: isActive(\'contextSwitcher\', entry) }">					<a data-ng-href="{{ entry.link }}">{{ entry.name }}</a>				</li>				<li class="divider"	data-ng-if="apps.length > 0"></li>				<li data-ng-if="apps.length"					data-ng-repeat="						entry in apps |						orderBy:order(TYPES.APPS):reverse(TYPES.APPS) |						limitTo:LIMITS.APPS"					data-ng-class="{ active: isActive(\'contextSwitcher\', entry) }">					<a data-ng-href="{{ entry.link }}">{{ entry.name }}</a>				</li>				<li data-ng-if="apps.length > LIMITS.APPS && links.ALL_APPS !== null && labels.ALL_APPS !== null">					<a data-ng-href="{{ links.ALL_APPS }}">{{ labels.ALL_APPS }} ({{apps.length}})</a>				</li>			</ul>		</li>	</ul>	<ul class="nav navbar-nav navbar-right">		<!-- large version (> 767px) -->		<li class="dropdown hidden-xs user-menu" data-ng-class="{ open: isOpen(\'userMenu\') }">			<a href="" data-ng-click="toggleOpenState(\'userMenu\')">				<span class="glyphicon glyphicon-user"></span>				<span class="hidden-xs hidden-sm hidden-md">					{{ user.givenName }} {{ user.familyName }}				</span>				<span class="caret"></span>			</a>			<ul class="dropdown-menu dropdown-menu-right">				<li data-ng-if="links.USER_PROFILE !== null && labels.USER_PROFILE !== null">					<a data-ng-href="{{ links.USER_PROFILE }}">{{ labels.USER_PROFILE }}</a>				</li>				<li data-ng-if="links.USER_LOGOUT !== null && labels.USER_LOGOUT !== null">					<a data-ng-href="{{ links.USER_LOGOUT }}">{{ labels.USER_LOGOUT }}</a>				</li>			</ul>		</li>		<li class="dropdown hidden-xs energy-manager-menu" data-ng-class="{ open: isOpen(\'energyManagerMenu\') }"			data-ng-if="energyManagers.length">			<a href="" data-ng-click="toggleOpenState(\'energyManagerMenu\')">				<span class="glyphicon glyphicon-tasks"></span>				<span class="hidden-xs hidden-sm hidden-md">{{ labels.ENERGY_MANAGER }}</span>				<span>({{energyManagers.length}})</span>				<span class="caret"></span>			</a>			<ul class="dropdown-menu dropdown-menu-right">				<li data-ng-repeat="					entry in energyManagers |					orderBy:order(TYPES.ENERGY_MANAGER):reverse(TYPES.ENERGY_MANAGER) |					limitTo:LIMITS.ENERGY_MANAGER">					<a data-ng-href="{{ entry.link }}">{{ entry.name }}</a>				</li>				<li data-ng-if="energyManagers.length > LIMITS.ENERGY_MANAGER &&					links.ALL_ENERGY_MANAGERS !== null &&					labels.ALL_ENERGY_MANAGERS !== null">					<a data-ng-href="{{ links.ALL_ENERGY_MANAGERS }}">{{ labels.ALL_ENERGY_MANAGERS }} ({{energyManagers.length}})</a>				</li>			</ul>		</li>		<li class="dropdown hidden-xs language-menu"			data-ng-class="{open: isOpen(\'languageMenu\')}"			data-ng-if="locales.length">			<a href="" data-ng-click="toggleOpenState(\'languageMenu\')">				<span class="glyphicon glyphicon-flag" title="{{ menus.languageMenu.activeEntry.name }}"></span>				<span class="hidden-sm hidden-md hidden-xs">{{ menus.languageMenu.activeEntry.nameShort }}</span>				<span class="caret"></span>			</a>			<ul class="dropdown-menu dropdown-menu-right">				<li data-ng-repeat="entry in locales"					data-ng-class="{ active: isActive(\'languageMenu\', entry) }">					<a href="" data-ng-click="setLocale(entry)">{{ entry.name }}</a>				</li>			</ul>		</li>		<!-- collapsed version (< 768px) -->		<li class="dropdown visible-xs settings-menu" data-ng-class="{ open: isOpen(\'settingsMenu\') }">			<a href="" data-ng-click="toggleOpenState(\'settingsMenu\')">				<span class="glyphicon glyphicon-th-large"></span>				<span class="caret"></span>			</a>			<ul class="dropdown-menu dropdown-menu-right">				<li>					<a data-ng-href="{{ links.USER_PROFILE }}">{{ labels.USER_PROFILE }}</a>				</li>				<li>					<a data-ng-href="{{ links.USER_LOGOUT }}">{{ labels.USER_LOGOUT }}</a>				</li>				<li class="divider" data-ng-if="energyManagers.length"></li>				<li data-ng-repeat="					entry in energyManagers |					orderBy:order(TYPES.ENERGY_MANAGER):reverse(TYPES.ENERGY_MANAGER) |					limitTo:LIMITS.ENERGY_MANAGER">					<a data-ng-href="{{ entry.link }}">{{ entry.name }}</a>				</li>				<li data-ng-if="energyManagers.length > LIMITS.ENERGY_MANAGER">					<a data-ng-href="{{ links.ALL_ENERGY_MANAGERS }}">{{ labels.ALL_ENERGY_MANAGERS }}						({{energyManagers.length}})</a>				</li>				<li class="divider" data-ng-if="locales"></li>				<li data-ng-repeat="entry in locales"					data-ng-class="{ active: isActive(\'languageMenu\', entry) }">					<a href="" data-ng-click="setLocale(entry)">{{ entry.name }}</a>				</li>			</ul>		</li>		<li>			<a href="" data-ng-click="toggleSidebar($event, \'right\')" class="toggleRightSidebarButton">				<span class="glyphicon glyphicon-bell" title="Notifications"></span>				<span class="hidden-sm hidden-md hidden-xs"></span>			</a>		</li>	</ul></div>')}),angular.module("keta.filters.OrderObjectBy",[]).filter("orderObjectBy",function(){return function(input,order,returnKey){if(!angular.isObject(input))return input;returnKey=returnKey||!1;var fields=[];angular.isDefined(order)&&null!==order?fields=order:angular.forEach(input,function(value,key){0!==key.indexOf("$")&&fields.push(key)});var sorted=[];return angular.forEach(fields,function(field){angular.isDefined(input[field])&&sorted.push(returnKey?field:input[field])}),sorted}}),angular.module("keta.filters.Slice",[]).filter("slice",function(){return function(arr,offset,limit){return angular.isDefined(arr)&&angular.isArray(arr)||(arr=[]),angular.isDefined(offset)&&angular.isNumber(offset)||(offset=0),angular.isDefined(limit)&&angular.isNumber(limit)||(limit=arr.length),arr.slice(offset,offset+limit)}}),angular.module("keta.filters.Unit",[]).filter("unit",function($filter,ketaSharedConfig){return function(input,configuration){var precision=0,unit="",isBytes=!1;angular.isDefined(configuration)&&(precision=angular.isNumber(configuration.precision)?configuration.precision:precision,unit=angular.isDefined(configuration.unit)?configuration.unit:unit,isBytes=angular.isDefined(configuration.isBytes)?configuration.isBytes:isBytes),0===input&&(precision=0);var sizes=isBytes?["Bytes","KB","MB","GB","TB"]:["","k","M","G","T"];if(unit===ketaSharedConfig.UNITS.EURO||unit===ketaSharedConfig.UNITS.KILOMETER||unit===ketaSharedConfig.UNITS.DOLLAR||unit===ketaSharedConfig.UNITS.POUND)return $filter("number")(input,precision)+" "+unit;if(angular.isNumber(input)){var multiplicator=0>input?-1:1,oneKiloByte=1024,oneKilo=1e3,parseBase=10;if(input*=multiplicator,input>=1){var i=parseInt(Math.floor(Math.log(input)/Math.log(isBytes?oneKiloByte:oneKilo)),parseBase);input=$filter("number")(input/Math.pow(isBytes?oneKiloByte:oneKilo,i)*multiplicator,precision),input+=" "+sizes[i]}else input=$filter("number")(input,precision)+" "+sizes[0];isBytes||(input+=unit)}return input.trim()}}),angular.module("keta.services.AccessToken",["keta.services.AppContext"]).factory("AccessToken",function($http,AppContext){var accessToken=AppContext.get("oauth.accessToken"),api={get:function(){return accessToken},set:function(token){angular.isDefined(token)&&angular.isString(token)&&(accessToken=token)},refresh:function(){var refreshUrl=AppContext.get("oauth.refreshTokenPath")||"/refreshAccessToken";return $http({method:"GET",url:refreshUrl})}};return api}),angular.module("keta.services.AppContext",[]).provider("AppContext",function(){var appContext=angular.isDefined(window.appContext)?window.appContext:{};this.get=function(key){var obj=appContext;key=key.split(".");for(var i=0,l=key.length;l>i;i++){if(!angular.isDefined(obj[key[i]]))return null;obj=obj[key[i]]}return obj},this.$get=function(){var api={get:this.get};return api}}),angular.module("keta.services.DeviceEvent",[]).provider("DeviceEvent",function(){this.$get=function(){var DeviceEventInstance=function(givenType,givenDevice){var that=this,type=givenType;that.getType=function(){return type};var device=givenDevice;that.getDevice=function(){return device}},api={CREATED:"CREATED",UPDATED:"UPDATED",DELETED:"DELETED",create:function(type,device){return new DeviceEventInstance(type,device)}};return api}}),angular.module("keta.services.DeviceSet",["keta.services.Device","keta.services.DeviceEvent","keta.services.EventBusDispatcher","keta.services.EventBusManager","keta.services.Logger"]).provider("DeviceSet",function(){this.$get=function($q,$rootScope,$log,Device,DeviceEvent,EventBusDispatcher,EventBusManager){var DeviceSetInstance=function(givenEventBus){var that=this,eventBus=givenEventBus,params={},set={};
that.filter=function(filter){return params.filter=filter,that},that.project=function(projection){return params.projection=projection,that},that.sort=function(sorting){return params.sorting=sorting,that},that.paginate=function(pagination){return angular.isDefined(pagination)&&(angular.isDefined(pagination.offset)&&(params.offset=pagination.offset),angular.isDefined(pagination.limit)&&(params.limit=pagination.limit)),that},that.live=function(){var liveHandlerUUID="CLIENT_"+EventBusDispatcher.generateUUID();return EventBusDispatcher.registerHandler(eventBus,liveHandlerUUID,function(event){api.sync(set,DeviceEvent.create(event.type,event.value)),EventBusManager.inDebugMode()&&$log.event([event],$log.ADVANCED_FORMATTER)}),EventBusDispatcher.send(eventBus,"devices",{action:"registerDeviceSetListener",body:{deviceFilter:params.filter,deviceProjection:params.projection,replyAddress:liveHandlerUUID}},function(reply){EventBusManager.inDebugMode()&&$log.request([{action:"registerDeviceSetListener",body:{deviceFilter:params.filter,deviceProjection:params.projection,replyAddress:liveHandlerUUID}},reply],$log.ADVANCED_FORMATTER)}),that},that.query=function(){var deferred=$q.defer();return EventBusDispatcher.send(eventBus,"devices",{action:"getDevices",params:params},function(reply){reply?(reply.params=params,200===reply.code?(angular.isDefined(reply.result)&&angular.isDefined(reply.result.items)?(angular.forEach(reply.result.items,function(item,index){reply.result.items[index]=Device.create(eventBus,item)}),set=reply):set={},EventBusManager.inDebugMode()&&$log.request([{action:"getDevices",params:params},reply],$log.ADVANCED_FORMATTER),deferred.resolve(reply),$rootScope.$digest()):deferred.reject(reply)):deferred.reject("Something bad happened. Got no reply.")}),deferred.promise}},api={create:function(eventBus){return new DeviceSetInstance(eventBus)},indexOf:function(set,device){var index=-1;return angular.forEach(set.result.items,function(item,key){item.guid===device.guid&&(index=key)}),index},length:function(set){return angular.isDefined(set.result.items)?set.result.items.length:0},get:function(set,index){return angular.isDefined(set.result.items[index])?set.result.items[index]:null},getAll:function(set){return angular.isDefined(set.result.items)?set.result.items:[]},sync:function(set,event){var modified=!1;if(event.getType()===DeviceEvent.CREATED)set.result.items.push(event.getDevice()),modified=!0;else if(event.getType()===DeviceEvent.DELETED)set.result.items.splice(api.indexOf(set,event.getDevice()),1),modified=!0;else if(event.getType()===DeviceEvent.UPDATED){var index=api.indexOf(set,event.getDevice());-1!==index&&(angular.extend(api.get(set,index),event.getDevice()),modified=!0)}modified&&!$rootScope.$$phase&&$rootScope.$apply()}};return api}}),angular.module("keta.services.Device",["keta.services.EventBusDispatcher","keta.services.EventBusManager","keta.services.Logger"]).provider("Device",function(){this.$get=function($q,$log,EventBusDispatcher,EventBusManager){var DeviceInstance=function(givenEventBus,properties){var that=this,eventBus=givenEventBus;angular.forEach(properties,function(value,key){that[key]=value,angular.isDefined(that.$pristine)||(that.$pristine={}),that.$pristine[key]=angular.copy(value)});var sendMessage=function(message){var deferred=$q.defer();return EventBusDispatcher.send(eventBus,"devices",message,function(reply){EventBusManager.inDebugMode()&&$log.request([message,reply],$log.ADVANCED_FORMATTER),200===reply.code?deferred.resolve(reply):deferred.reject(reply)}),deferred.promise},returnRejectedPromise=function(message){var deferred=$q.defer();return deferred.reject(message),deferred.promise};that.update=function(){var changes={tagValues:{}};if(angular.forEach(that.tagValues,function(tagValue,tagName){angular.equals(that.tagValues[tagName].value,that.$pristine.tagValues[tagName].value)||(changes.tagValues[tagName]={},changes.tagValues[tagName].value=tagValue.value,changes.tagValues[tagName].oca=tagValue.oca)}),Object.keys(changes.tagValues).length){var deferred=$q.defer();return sendMessage({action:"updateDevice",params:{deviceId:that.guid},body:changes}).then(function(reply){angular.forEach(that.$pristine,function(value,key){that.$pristine[key]=angular.copy(that[key])}),deferred.resolve(reply)},function(reply){deferred.reject(reply)}),deferred.promise}return returnRejectedPromise("No changes found")},that["delete"]=function(){return sendMessage({action:"deleteDevice",params:{deviceId:that.guid}})}},api={create:function(eventBus,properties){return new DeviceInstance(eventBus,properties)}};return api}}),angular.module("keta.services.EventBusDispatcher",["keta.services.AccessToken"]).provider("EventBusDispatcher",function(){this.$get=function($window,$timeout,AccessToken){var waitForOpen=function(eventBus,replied,success,error){var timeout=null;if(replied&&(timeout=$timeout(function(){error()},1e3*eventBus.getConfig().requestTimeout)),1!==eventBus.getInstance().readyState()){var onopen=null;angular.isFunction(eventBus.getInstance().onopen)&&(onopen=eventBus.getInstance().onopen),eventBus.getInstance().onopen=function(){angular.isFunction(onopen)&&onopen(),null!==timeout&&$timeout.cancel(timeout),success()}}else null!==timeout&&$timeout.cancel(timeout),success()},api={STATE_CONNECTING:0,STATE_OPEN:1,STATE_CLOSING:2,STATE_CLOSED:3,RESPONSE_CODE_OK:200,RESPONSE_MESSAGE_OK:"OK",RESPONSE_CODE_BAD_REQUEST:400,RESPONSE_MESSAGE_BAD_REQUEST:"Bad Request",RESPONSE_CODE_UNAUTHORIZED:401,RESPONSE_MESSAGE_UNAUTHORIZED:"Unauthorized",RESPONSE_CODE_NOT_FOUND:404,RESPONSE_MESSAGE_NOT_FOUND:"Not Found",RESPONSE_CODE_REQUEST_TIMEOUT:408,RESPONSE_MESSAGE_REQUEST_TIMEOUT:"Request Time-out",RESPONSE_CODE_AUTHENTICATION_TIMEOUT:419,RESPONSE_MESSAGE_AUTHENTICATION_TIMEOUT:"Authentication Timeout",RESPONSE_CODE_INTERNAL_SERVER_ERROR:500,RESPONSE_MESSAGE_INTERNAL_SERVER_ERROR:"Internal Server Error",RESPONSE_CODE_SERVICE_UNAVAILABLE:503,RESPONSE_MESSAGE_SERVICE_UNAVAILABLE:"Service Unavailable",send:function(eventBus,address,message,replyHandler){message.accessToken=AccessToken.get();var handler=function(reply){reply&&419===reply.code?AccessToken.refresh().then(function(response){angular.isDefined(response.data.accessToken)?(AccessToken.set(response.data.accessToken),api.send(eventBus,address,message,replyHandler)):$window.location.reload()},function(){$window.location.reload()}):angular.isFunction(replyHandler)&&replyHandler(reply)};angular.isDefined(replyHandler)&&angular.isFunction(replyHandler)?waitForOpen(eventBus,!0,function(){eventBus.getInstance().send(address,message,handler)},function(){replyHandler({code:408,message:"Request Time-out"})}):eventBus.getInstance().send(address,message,handler)},publish:function(eventBus,address,message){message.accessToken=AccessToken.get(),waitForOpen(eventBus,!1,function(){eventBus.getInstance().publish(address,message)})},registerHandler:function(eventBus,address,handler){waitForOpen(eventBus,!1,function(){eventBus.getInstance().registerHandler(address,handler)})},unregisterHandler:function(eventBus,address,handler){waitForOpen(eventBus,!1,function(){eventBus.getInstance().unregisterHandler(address,handler)})},close:function(eventBus){eventBus.getInstance().close()},readyState:function(eventBus){return eventBus.getInstance().readyState()},generateUUID:function(){var HEX_RANGE=16,BIT_HALF=8,BIT_SHIFT=3;return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a,b){return b=Math.random()*HEX_RANGE,("y"===a?b&BIT_SHIFT|BIT_HALF:0|b).toString(HEX_RANGE)})}};return api}}),angular.module("keta.services.EventBusManager",[]).provider("EventBusManager",function(){var that=this,eventBuses={},debug=!1;this.add=function(eventBus){return eventBuses[eventBus.getConfig().id]=eventBus,that},this.remove=function(eventBus){return angular.isDefined(eventBuses[eventBus.getConfig().id])&&delete eventBuses[eventBus.getConfig().id],that},this.removeAll=function(){return eventBuses={},that},this.get=function(eventBusId){return angular.isDefined(eventBuses[eventBusId])?eventBuses[eventBusId]:null},this.getAll=function(){return eventBuses},this.enableDebug=function(){debug=!0},this.disableDebug=function(){debug=!1},this.inDebugMode=function(){return debug===!0},this.$get=function(){var api={add:this.add,remove:this.remove,removeAll:this.removeAll,get:this.get,getAll:this.getAll,enableDebug:this.enableDebug,disableDebug:this.disableDebug,inDebugMode:this.inDebugMode};return api}}),angular.module("keta.services.EventBus",[]).provider("EventBus",function(){var EventBus=function(givenConfig){var DEFAULT_CONFIG={id:"kiwibus",url:"https://localhost:10443/kiwibus",reconnect:!0,reconnectTimeout:5,autoConnect:!1,autoUnregister:!0,requestTimeout:10};this.getDefaultConfig=function(){return DEFAULT_CONFIG};var config=angular.extend({},DEFAULT_CONFIG,givenConfig);this.getConfig=function(){return config};var eb=null;this.getInstance=function(){return eb};var init=function(){eb=new vertx.EventBus(config.url),eb.onclose=function(){config.reconnect&&window.setTimeout(function(){init()},1e3*config.reconnectTimeout)}};init()};this.create=function(config){return new EventBus(config)},this.$get=function(){}}),angular.module("keta.services.Logger",[]).config(function($provide){$provide.decorator("$log",function($delegate){return $delegate.ADVANCED_FORMATTER=function(messages){angular.isArray(messages)||(messages=[messages]);var output="%c["+(new Date).toISOString()+"]\n%c";angular.forEach(messages,function(message){output+=JSON.stringify(message,null,"	")+"\n"}),console.log(output,"color:#acbf2f;font-weight:bold;","color:#333;font-weight:normal;")},$delegate.request=function(messages,formatter){angular.isDefined(formatter)&&angular.isFunction(formatter)?formatter(messages):console.log(messages)},$delegate.event=function(messages,formatter){$delegate.request(messages,formatter)},$delegate})}),angular.module("keta.services.TagSet",["keta.services.Tag"]).provider("TagSet",function(){this.$get=function(){var TagSetInstance=function(){var that=this,tags=[],tagsAsHierarchy={};that.getTags=function(){return tags},that.getTagsAsHierarchy=function(){return tagsAsHierarchy},that.add=function(tag){return angular.isDefined(tagsAsHierarchy[tag.getGuid()])&&angular.isDefined(tagsAsHierarchy[tag.getGuid()][tag.getName()])||(angular.isDefined(tagsAsHierarchy[tag.getGuid()])||(tagsAsHierarchy[tag.getGuid()]={}),tagsAsHierarchy[tag.getGuid()][tag.getName()]=tag,tags.push(tag)),that},that.remove=function(tag){return angular.isDefined(tagsAsHierarchy[tag.getGuid()][tag.getName()])&&(delete tagsAsHierarchy[tag.getGuid()][tag.getName()],0===Object.keys(tagsAsHierarchy[tag.getGuid()]).length&&delete tagsAsHierarchy[tag.getGuid()],tags.splice(tags.indexOf(tag),1)),that}},api={create:function(){return new TagSetInstance}};return api}}),angular.module("keta.services.Tag",[]).provider("Tag",function(){this.$get=function(){var TagInstance=function(properties){var guid=angular.isDefined(properties.guid)?properties.guid:null;this.getGuid=function(){return guid};var name=angular.isDefined(properties.name)?properties.name:null;this.getName=function(){return name};var sampleRate=angular.isDefined(properties.sampleRate)&&properties.sampleRate>=5?properties.sampleRate:null;this.getSampleRate=function(){return sampleRate}},api={create:function(properties){return new TagInstance(properties)}};return api}}),angular.module("keta.shared",[]).constant("ketaSharedConfig",{EVENTS:{TOGGLE_SIDEBAR_LEFT:"TOGGLE_SIDEBAR_LEFT",TOGGLE_SIDEBAR_RIGHT:"TOGGLE_SIDEBAR_RIGHT"},STATE:{OK:"OK",ERROR:"ERROR",FATAL:"FATAL"},UNITS:{WATTS:"W",WATTHOURS:"Wh",PERCENT:"%",EURO:"€",DOLLAR:"$",POUND:"£",KILOMETER:"km"},DEVICE_CLASSES:{ENERGY_MANAGER:"com.kiwigrid.devices.em.EnergyManager",LOCATION:"com.kiwigrid.devices.location.Location",PV_PLANT:"com.kiwigrid.devices.pvplant.PVPlant"},SIDEBAR:{POSITION_LEFT:"left",POSITION_RIGHT:"right",CSS_OFFCANVAS:"offcanvas",CSS_BRAND_BAR:"brand-bar",TOGGLE_AREA_OFFSET:5,TRANSCLUDE_OFFSET:15},WORLD_BAR:{CSS_CONTEXT_SWITCHER:"context-switcher",ENTRY_CONTEXT_SWITCHER:"contextSwitcher",ENTRY_CONTEXT_SWITCHER_WORLDS:"worlds",ENTRY_CONTEXT_SWITCHER_MANAGERS:"managers",ENTRY_CONTEXT_SWITCHER_APPS:"apps",ENTRY_USER_MENU:"userMenu",ENTRY_LANGUAGE_MENU:"languageMenu"},EXTENDED_TABLE:{COMPONENTS:{TABLE:"table",FILTER:"filter",SELECTOR:"selector",PAGER:"pager"},OPERATIONS_MODE:{DATA:"data",VIEW:"view"},PAGER:{TOTAL:"total",LIMIT:"limit",OFFSET:"offset"}}}).factory("ketaSharedFactory",function(){var factory={};return factory.doesPropertyExist=function(obj,prop){for(var parts=prop.split("."),i=0,l=parts.length;l>i;i++){var part=parts[i];if(!(null!==obj&&"object"==typeof obj&&part in obj))return!1;obj=obj[part]}return!0},factory});
//# sourceMappingURL=keta.min.js.map