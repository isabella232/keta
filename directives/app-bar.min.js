/**
 * keta 0.4.17
 * Build 2016-01-21T16:48:47.204Z
 *
 * Copyright Kiwigrid GmbH 2014-2016
 * http://kiwigrid.github.io/keta/
 *
 * Licensed under MIT License
 * https://raw.githubusercontent.com/kiwigrid/keta/master/LICENSE
 */
"use strict";angular.module("keta.directives.AppBar",["keta.directives.Sidebar","keta.services.EventBusManager","keta.services.Device","keta.services.DeviceSet","keta.services.ApplicationSet","keta.services.User","keta.services.AccessToken","keta.utils.Common"]).constant("AppBarConstants",{COMPONENT:{WORLD_SWITCHER:"worldSwitcher",MENU_BAR_TOGGLE:"menuBarToggle",NOTIFICATION_BAR_TOGGLE:"notificationBarToggle",APP_TITLE:"appTitle",USER_MENU:"userMenu",LANGUAGE_MENU:"languageMenu",ENERGY_MANAGER_MENU:"energyManagerMenu",COMPACT_MENU:"compactMenu"},SIZE:{XXS:"xxs",XS:"xs",SM:"sm",MD:"md",LG:"lg"},STATE:{HIDDEN:"hidden",FULL:"full",COMPACT:"compact"},ROOT_APP_ID:"kiwigrid.desktop"}).constant("AppBarMessageKeys",{en:{"__keta.directives.AppBar_app_title":"Application","__keta.directives.AppBar_all_apps":"All Apps","__keta.directives.AppBar_all_energy_managers":"All Energy-Managers","__keta.directives.AppBar_energy_manager":"Energy-Manager","__keta.directives.AppBar_user_logout":"Logout","__keta.directives.AppBar_user_profile":"User Account","__keta.directives.AppBar_logged_in_as":"You are temporarily logged in as","__keta.directives.AppBar_drop_access":"Drop access"},de:{"__keta.directives.AppBar_app_title":"Applikation","__keta.directives.AppBar_all_apps":"Alle Apps","__keta.directives.AppBar_all_energy_managers":"Alle Energy-Manager","__keta.directives.AppBar_energy_manager":"Energy-Manager","__keta.directives.AppBar_user_logout":"Abmelden","__keta.directives.AppBar_user_profile":"Benutzerkonto","__keta.directives.AppBar_logged_in_as":"Sie sind tempor√§r angemeldet als","__keta.directives.AppBar_drop_access":"Zugriff beenden"}}).directive("appBar",function($rootScope,$window,$document,$filter,EventBusManager,DeviceSet,ApplicationSet,User,AccessToken,AccessTokenConstants,AppBarConstants,AppBarMessageKeys,DeviceConstants,SidebarConstants,CommonUtils){return{restrict:"EA",replace:!0,scope:{eventBusId:"=?",locales:"=?",currentLocale:"=?",labels:"=?",links:"=?",worlds:"=?",displayModes:"=?",rootApp:"=?"},transclude:!0,templateUrl:"/components/directives/app-bar.html",link:function(scope,element){scope.user={},scope.menus={},scope.worlds=scope.worlds||[],scope.locales=scope.locales||[],scope.energyManagers=[],scope.impersonationInfo={},scope.locales=$filter("orderBy")(scope.locales,"name"),scope.eventBusId=scope.eventBusId||"kiwibus";var eventBus=EventBusManager.get(scope.eventBusId),STATES=AppBarConstants.STATE,SIZES=AppBarConstants.SIZE,DEFAULT_CONTAINER_HEIGHT=120;scope.MENU_ELEMENTS=AppBarConstants.COMPONENT;var DECIMAL_RADIX=10,HIDDEN_CLASS_PREFIX="hidden-",VISIBLE_CLASS_PREFIX="visible-",sizesFullState={};sizesFullState[SIZES.XXS]=STATES.FULL,sizesFullState[SIZES.XS]=STATES.FULL,sizesFullState[SIZES.SM]=STATES.FULL,sizesFullState[SIZES.MD]=STATES.FULL,sizesFullState[SIZES.LG]=STATES.FULL;var sizesDefaultState={};sizesDefaultState[SIZES.XXS]=STATES.HIDDEN,sizesDefaultState[SIZES.XS]=STATES.HIDDEN,sizesDefaultState[SIZES.SM]=STATES.COMPACT,sizesDefaultState[SIZES.MD]=STATES.COMPACT,sizesDefaultState[SIZES.LG]=STATES.FULL;var sizesHiddenState={};sizesHiddenState[SIZES.XXS]=STATES.HIDDEN,sizesHiddenState[SIZES.XS]=STATES.HIDDEN,sizesHiddenState[SIZES.SM]=STATES.HIDDEN,sizesHiddenState[SIZES.MD]=STATES.HIDDEN,sizesHiddenState[SIZES.LG]=STATES.HIDDEN;var defaultDisplayModes={};defaultDisplayModes[scope.MENU_ELEMENTS.WORLD_SWITCHER]=sizesHiddenState,defaultDisplayModes[scope.MENU_ELEMENTS.MENU_BAR_TOGGLE]=sizesFullState,defaultDisplayModes[scope.MENU_ELEMENTS.NOTIFICATION_BAR_TOGGLE]=sizesFullState,defaultDisplayModes[scope.MENU_ELEMENTS.APP_TITLE]=sizesFullState,defaultDisplayModes[scope.MENU_ELEMENTS.USER_MENU]=sizesDefaultState,defaultDisplayModes[scope.MENU_ELEMENTS.ENERGY_MANAGER_MENU]=sizesDefaultState,defaultDisplayModes[scope.MENU_ELEMENTS.LANGUAGE_MENU]=sizesDefaultState,defaultDisplayModes[scope.MENU_ELEMENTS.COMPACT_MENU]={},defaultDisplayModes[scope.MENU_ELEMENTS.COMPACT_MENU][SIZES.XXS]=STATES.COMPACT,defaultDisplayModes[scope.MENU_ELEMENTS.COMPACT_MENU][SIZES.XS]=STATES.COMPACT,defaultDisplayModes[scope.MENU_ELEMENTS.COMPACT_MENU][SIZES.SM]=STATES.HIDDEN,defaultDisplayModes[scope.MENU_ELEMENTS.COMPACT_MENU][SIZES.MD]=STATES.HIDDEN,defaultDisplayModes[scope.MENU_ELEMENTS.COMPACT_MENU][SIZES.LG]=STATES.HIDDEN;var scrollContainerHeight=DEFAULT_CONTAINER_HEIGHT;scope.container=element[0];var navBars=element.find("nav"),navbarFirst=navBars[0],navbarFirstHeight=0,impersonationBar=element[0].getElementsByClassName("impersonation-bar")[0],impersonationBarHeight=0,navbarSecond=navBars[1],navbarSecondHeight=0,navbarSecondMarginBottom=0,isMenuVisible=function(menuElement){var isVisible=!1;return angular.forEach(SIZES,function(size){scope.displayModes[menuElement][size]!==STATES.HIDDEN&&(isVisible=!0)}),isVisible},mergeObjects=function mergeObjects(customObject,defaultObject){var value,result={};for(value in customObject)value in defaultObject&&"object"==typeof customObject[value]&&null!==value?result[value]=mergeObjects(customObject[value],defaultObject[value]):result[value]=customObject[value];for(value in defaultObject)value in result||(result[value]=defaultObject[value]);return result},setContainerHeight=function(){navbarFirstHeight=navbarFirst.offsetHeight,angular.isDefined(impersonationBar)&&(impersonationBarHeight=impersonationBar.offsetHeight),navbarSecondHeight=navbarSecond.offsetHeight,navbarSecondMarginBottom=parseInt($window.getComputedStyle(navbarSecond,null).getPropertyValue("margin-bottom"),DECIMAL_RADIX),scrollContainerHeight=navbarFirstHeight+impersonationBarHeight+navbarSecondHeight+navbarSecondMarginBottom};scope.displayModes=mergeObjects(scope.displayModes,defaultDisplayModes),scope.currentLocale=scope.currentLocale||"en",scope.MESSAGE_KEY_PREFIX="__keta.directives.AppBar",scope.labels=angular.extend(AppBarMessageKeys,scope.labels),scope.getLabel=function(key){return CommonUtils.getLabelByLocale(key,scope.labels,scope.currentLocale)};var defaultLinks={ALL_APPS:null,ALL_ENERGY_MANAGERS:null,APP_ROOT:"#/",USER_PROFILE:null,USER_LOGOUT:null};scope.TYPES={ENERGY_MANAGER:"ENERGY_MANAGER"},scope.LIMITS={ENERGY_MANAGER:3};var PREDICATES={ENERGY_MANAGER:{field:"name",reverse:!1}};scope.links=angular.isDefined(scope.links)?angular.extend(defaultLinks,scope.links):defaultLinks;var setDefaultLinks=function(){scope.links.USER_LOGOUT=angular.isString(scope.links.USER_LOGOUT)?scope.links.USER_LOGOUT:"/rest/auth/logout",null!==eventBus&&ApplicationSet.create(eventBus).query().then(function(reply){if(angular.isDefined(reply.result)&&angular.isDefined(reply.result.items)){var entryUri=null,name={};scope.rootApp=null,angular.forEach(reply.result.items,function(app){angular.isDefined(app.appId)&&app.appId===AppBarConstants.ROOT_APP_ID&&angular.isDefined(app.entryUri)&&(entryUri=app.entryUri,CommonUtils.doesPropertyExist(app,"meta.i18n")&&angular.forEach(Object.keys(app.meta.i18n),function(locale){name[locale]=app.meta.i18n[locale].name}))});var link=document.createElement("a");link.href=entryUri;var linkProtocol=link.protocol+(":"===link.protocol[link.protocol.length-1]?"//":"://"),linkPort=""!==link.port&&"0"!==link.port?":"+link.port:"",linkOrigin=angular.isDefined(link.origin)?link.origin:linkProtocol+link.hostname+linkPort;null!==entryUri&&(scope.rootApp={},scope.rootApp.link=entryUri,scope.rootApp.name=name,scope.worlds.unshift({name:"Desktop",link:scope.rootApp.link})),scope.links.ALL_APPS=angular.isString(scope.links.ALL_APPS)?scope.links.ALL_APPS:linkOrigin+link.search+"#/applications",scope.links.USER_PROFILE=angular.isString(scope.links.USER_PROFILE)?scope.links.USER_PROFILE:linkOrigin+link.search+"#/user",angular.isString(scope.links.ALL_ENERGY_MANAGERS)||(scope.links.ALL_ENERGY_MANAGERS=linkOrigin+link.search+"#/devices?deviceClass=com.kiwigrid.devices.em.EnergyManager")}})},allLinkKeysAlreadySet=!0;angular.forEach(Object.keys(defaultLinks),function(linkKey){null===defaultLinks[linkKey]&&(allLinkKeysAlreadySet=!1)}),allLinkKeysAlreadySet===!1&&setDefaultLinks(),scope.getClasses=function(menuName,elementType){var classes=[];return angular.isDefined(elementType)||(elementType="menu"),angular.isDefined(scope.menus[menuName])&&angular.isDefined(scope.menus[menuName].isOpen)&&scope.menus[menuName].isOpen&&classes.push("open"),angular.forEach(SIZES,function(size){var state=scope.displayModes[menuName][size];switch(elementType){case"menu":switch(state){case STATES.HIDDEN:classes.push(HIDDEN_CLASS_PREFIX+size);break;case STATES.FULL:classes.push(VISIBLE_CLASS_PREFIX+size);break;case STATES.COMPACT:classes.push(VISIBLE_CLASS_PREFIX+size)}break;case"label":state===STATES.COMPACT&&classes.push(HIDDEN_CLASS_PREFIX+size)}}),classes.join(" ")};var getDevices=function(){null!==eventBus&&angular.isDefined(scope.user.userId)&&isMenuVisible(scope.MENU_ELEMENTS.ENERGY_MANAGER_MENU)&&DeviceSet.create(eventBus).filter({"deviceModel.deviceClass":{$in:[DeviceConstants.CLASS.ENERGY_MANAGER]},owner:scope.user.userId}).project({tagValues:{IdName:1,SettingsNetworkMap:1}}).query().then(function(reply){if(angular.isDefined(reply.result)&&angular.isDefined(reply.result.items)){var energyManagers=[];angular.forEach(reply.result.items,function(item){var emIP=angular.isDefined(item.tagValues)&&angular.isDefined(item.tagValues.SettingsNetworkMap)&&angular.isDefined(item.tagValues.SettingsNetworkMap.value)&&angular.isDefined(item.tagValues.SettingsNetworkMap.value.ipv4)?item.tagValues.SettingsNetworkMap.value.ipv4:null;null!==emIP&&energyManagers.push({name:item.tagValues.IdName.value,link:"http://"+emIP})}),scope.energyManagers=energyManagers}})},getActiveLangEntry=function(){var activeLangEntry=scope.locales[0]||{};return angular.forEach(scope.locales,function(value){value.code===scope.currentLocale&&(activeLangEntry=value)}),activeLangEntry},updateMenus=function(){scope.menus={},scope.menus[scope.MENU_ELEMENTS.COMPACT_MENU]={isOpen:!1},scope.menus[scope.MENU_ELEMENTS.WORLD_SWITCHER]={isOpen:!1},scope.menus[scope.MENU_ELEMENTS.ENERGY_MANAGER_MENU]={isOpen:!1},scope.menus[scope.MENU_ELEMENTS.USER_MENU]={isOpen:!1},scope.menus[scope.MENU_ELEMENTS.LANGUAGE_MENU]={isOpen:!1,activeEntry:getActiveLangEntry()}};null!==eventBus&&User.getCurrent(eventBus).then(function(reply){scope.user=reply,getDevices()}),scope.isImpersonated=function(){var result=!1;return AccessToken.isType(AccessTokenConstants.SESSION_TYPE.IMPERSONATED)&&(scope.impersonationInfo={userId:AccessToken.getUserId(),backUrl:AccessToken.getBackUrl()},result=!0),result},scope.order=function(type){var field=angular.isDefined(PREDICATES[type])?PREDICATES[type].field:"name";return function(item){return angular.isDefined(item[field])?item[field]:""}},scope.reverse=function(type){return angular.isDefined(PREDICATES[type])&&angular.isDefined(PREDICATES[type].reverse)?PREDICATES[type].reverse:!1},scope.scrollOverNavbarFirst=!1,angular.element($window).bind("scroll",function(){angular.isDefined(navbarFirst)&&(this.scrollY>navbarFirstHeight+impersonationBarHeight?(scope.scrollOverNavbarFirst=!0,element.css("height",scrollContainerHeight+"px")):(scope.scrollOverNavbarFirst=!1,element.css("height","auto")),scope.menus.worldSwitcher.isOpen=!1,scope.$digest())}),scope.toggleOpenState=function(menuName){if(angular.isDefined(scope.menus[menuName])){var currentState=angular.copy(scope.menus[menuName].isOpen);scope.closeAllMenus(),currentState===scope.menus[menuName].isOpen&&(scope.menus[menuName].isOpen=!scope.menus[menuName].isOpen)}},scope.closeAllMenus=function(){scope.menus[scope.MENU_ELEMENTS.WORLD_SWITCHER].isOpen=!1,scope.menus[scope.MENU_ELEMENTS.USER_MENU].isOpen=!1,scope.menus[scope.MENU_ELEMENTS.ENERGY_MANAGER_MENU].isOpen=!1,scope.menus[scope.MENU_ELEMENTS.COMPACT_MENU].isOpen=!1,scope.menus[scope.MENU_ELEMENTS.LANGUAGE_MENU].isOpen=!1},scope.setLocale=function(locale){scope.currentLocale=locale.code,scope.menus[scope.MENU_ELEMENTS.LANGUAGE_MENU].activeEntry=locale,scope.closeAllMenus()},scope.$on("$locationChangeStart",function(){scope.closeAllMenus()}),scope.isActive=function(menuName,entry){return angular.isDefined(scope.menus[menuName])&&scope.menus[menuName].activeEntry===entry},scope.toggleSidebar=function($event,position){$event.stopPropagation(),scope.closeAllMenus(),position===SidebarConstants.POSITION.LEFT?$rootScope.$broadcast(SidebarConstants.EVENT.TOGGLE_SIDEBAR_LEFT):position===SidebarConstants.POSITION.RIGHT&&$rootScope.$broadcast(SidebarConstants.EVENT.TOGGLE_SIDEBAR_RIGHT)},$document.bind("click",function(event){var appBarHtml=element.html(),targetElementHtml=angular.element(event.target).html();-1===appBarHtml.indexOf(targetElementHtml)&&(scope.closeAllMenus(),scope.$digest())}),scope.$watch("energyManagers",function(newValue,oldValue){newValue!==oldValue&&updateMenus()}),scope.$watch("container.offsetHeight",function(newValue,oldValue){newValue!==oldValue&&setContainerHeight()}),setContainerHeight(),updateMenus()}}});
//# sourceMappingURL=app-bar.min.js.map