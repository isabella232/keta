"use strict";angular.module("keta.directives.WorldBar",["keta.shared","keta.services.EventBusDispatcher","keta.services.EventBusManager"]).directive("worldBar",function($rootScope,$document,EventBusDispatcher,EventBusManager,ketaSharedConfig){return{restrict:"EA",replace:!0,scope:{eventBusId:"=?",locales:"=?",currentLocale:"=?",labels:"=?",links:"=?"},templateUrl:"/components/directives/world-bar.html",link:function(scope,element){function closeAllMenus(){scope.menus.contextSwitcher.isOpen=!1,scope.menus.userMenu.isOpen=!1,scope.menus.energyManagerMenu.isOpen=!1,scope.menus.settingsMenu.isOpen=!1,scope.menus.languageMenu.isOpen=!1}scope.eventBusId=scope.eventBusId||"kiwibus",scope.eventBus=EventBusManager.get(scope.eventBusId),scope.locales=scope.locales||[{name:"English",nameShort:"EN",code:"en"}],scope.currentLocale=scope.currentLocale||"en";var defaultLabels={ALL_APPS:"All Apps",ENERGY_MANAGER:"Energy-Manager",ALL_ENERGY_MANAGERS:"All Energy-Managers",USER_PROFILE:"User Profile",USER_LOGOUT:"Logout"};scope.labels=angular.isDefined(scope.labels)?angular.extend(defaultLabels,scope.labels):defaultLabels;var defaultLinks={ALL_APPS:null,ALL_ENERGY_MANAGERS:null,USER_PROFILE:null,USER_LOGOUT:null};scope.links=angular.isDefined(scope.links)?angular.extend(defaultLinks,scope.links):defaultLinks,scope.TYPES={APPS:"APPS",ENERGY_MANAGER:"ENERGY_MANAGER"},scope.LIMITS={APPS:3,ENERGY_MANAGER:3};var PREDICATES={APPS:{field:"name",reverse:!1},ENERGY_MANAGER:{field:"name",reverse:!1}};scope.menus={contextSwitcher:{activeEntry:null,isOpen:!1},userMenu:{activeEntry:null,isOpen:!1},energyManagerMenu:{activeEntry:null,isOpen:!1},settingsMenu:{activeEntry:null,isOpen:!1},languageMenu:{activeEntry:null,isOpen:!1}},scope.worlds=[{name:"Desktop",link:"https://cloud.mycompany.com"},{name:"Market",link:"https://market.mycompany.com"},{name:"Service",link:"https://service.mycompany.com"}],scope.apps=[],null!==scope.eventBus&&EventBusDispatcher.send(scope.eventBus,"applications",{action:"getApplications"},function(reply){200===reply.code&&(scope.apps=reply.result.items,scope.$digest())}),scope.user={},null!==scope.eventBus&&EventBusDispatcher.send(scope.eventBus,"users",{action:"getCurrentUser"},function(reply){200===reply.code&&(scope.user=reply.result,scope.$digest())}),scope.energyManagers=[],null!==scope.eventBus&&EventBusDispatcher.send(scope.eventBus,"devices",{action:"getDevices",params:{deviceClass:ketaSharedConfig.DEVICE_CLASSES.ENERGY_MANAGER}},function(reply){if(200===reply.code){var energyManagers=[];angular.forEach(reply.result.items,function(item){energyManagers.push({name:item.tagValues.IdName.value,link:"http://"+item.currentAddress})}),scope.energyManagers=energyManagers,scope.$digest()}}),scope.order=function(type){var field=angular.isDefined(PREDICATES[type])?PREDICATES[type].field:"name";return function(item){return angular.isDefined(item[field])?item[field]:""}},scope.reverse=function(type){return angular.isDefined(PREDICATES[type])&&angular.isDefined(PREDICATES[type].reverse)?PREDICATES[type].reverse:!1};var initActiveEntries=function(){angular.isDefined(scope.worlds[0])&&(scope.menus.contextSwitcher.activeEntry=scope.worlds[0]),angular.forEach(scope.locales,function(locale){angular.isDefined(locale.code)&&locale.code===scope.currentLocale&&(scope.menus.languageMenu.activeEntry=locale)})};initActiveEntries(),scope.toggleSidebar=function($event,position){$event.stopPropagation(),position===ketaSharedConfig.SIDEBAR.POSITION_LEFT?$rootScope.$broadcast(ketaSharedConfig.EVENTS.TOGGLE_SIDEBAR_LEFT):position===ketaSharedConfig.SIDEBAR.POSITION_RIGHT&&$rootScope.$broadcast(ketaSharedConfig.EVENTS.TOGGLE_SIDEBAR_RIGHT)},scope.isOpen=function(menuName){return angular.isDefined(scope.menus[menuName])?scope.menus[menuName].isOpen:null},scope.isActive=function(menuName,entry){return angular.isDefined(scope.menus[menuName])&&scope.menus[menuName].activeEntry===entry},scope.setLocale=function(locale){scope.currentLocale=locale.code,scope.menus.languageMenu.activeEntry=locale,closeAllMenus()},scope.toggleOpenState=function(menuName){if(angular.isDefined(scope.menus[menuName])){var currentState=angular.copy(scope.menus[menuName].isOpen);closeAllMenus(),currentState===scope.menus[menuName].isOpen&&(scope.menus[menuName].isOpen=!scope.menus[menuName].isOpen)}},scope.$on("$locationChangeStart",function(){closeAllMenus()}),$document.bind("click",function(event){var worldBarHtml=element.html(),targetElementHtml=angular.element(event.target).html();-1===worldBarHtml.indexOf(targetElementHtml)&&(closeAllMenus(),scope.$digest())})}}});
//# sourceMappingURL=world-bar.min.js.map