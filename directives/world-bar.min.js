"use strict";angular.module("keta.directives.WorldBar",["keta.shared"]).directive("worldBar",function(ketaSharedConfig,$rootScope,$document,ketaSharedFactory){return{restrict:"EA",replace:!0,scope:{configuration:"=?"},templateUrl:"/components/directives/world-bar.html",link:function(scope,element){function useFirstEntryAsActive(menuName,subKey){angular.isDefined(scope.configuration)&&angular.isDefined(scope.configuration[menuName])&&(angular.isDefined(scope.configuration[menuName].items)&&angular.isDefined(scope.configuration[menuName].items[0])?scope[menuName].activeEntry=scope.configuration[menuName].items[0]:angular.isDefined(scope.configuration[menuName][subKey])&&angular.isDefined(scope.configuration[menuName][subKey].items)&&angular.isDefined(scope.configuration[menuName][subKey].items[0])&&(scope[menuName].activeEntry=scope.configuration[menuName][subKey].items[0]))}function initMenus(){scope.contextSwitcher=angular.copy(menuReferenceObject),useFirstEntryAsActive(ketaSharedConfig.WORLD_BAR.ENTRY_CONTEXT_SWITCHER,ketaSharedConfig.WORLD_BAR.ENTRY_CONTEXT_SWITCHER_WORLDS),scope.userMenu=angular.copy(menuReferenceObject),scope.energyManagerMenu=angular.copy(menuReferenceObject),scope.settingsMenu=angular.copy(menuReferenceObject),scope.languageMenu=angular.copy(menuReferenceObject),useFirstEntryAsActive(ketaSharedConfig.WORLD_BAR.ENTRY_LANGUAGE_MENU)}function closeAllMenus(){scope.contextSwitcher.isOpen=!1,scope.userMenu.isOpen=!1,scope.energyManagerMenu.isOpen=!1,scope.settingsMenu.isOpen=!1,scope.languageMenu.isOpen=!1}scope.configuration=scope.configuration||{},scope.allAppsLabel=ketaSharedFactory.doesPropertyExist(scope.configuration,"contextSwitcher.apps.labels.allApps")?scope.configuration.contextSwitcher.apps.labels.allApps:"All Apps",scope.allEnergyManagersLabel=ketaSharedFactory.doesPropertyExist(scope.configuration,"energyManagerMenu.labels.allEnergyManagers")?scope.configuration.energyManagerMenu.labels.allEnergyManagers:"All Energy-Managers",scope.userProfileLabel=ketaSharedFactory.doesPropertyExist(scope.configuration,"userMenu.labels.userProfile")?scope.configuration.userMenu.labels.userProfile:"User Profile",scope.logoutUserLabel=ketaSharedFactory.doesPropertyExist(scope.configuration,"userMenu.labels.logout")?scope.configuration.userMenu.labels.logout:"Logout",scope.TYPES={APPS:"APPS",ENERGY_MANAGER:"ENERGY_MANAGER"},scope.LIMITS={APPS:3,ENERGY_MANAGER:3};var PREDICATES={APPS:{field:"name",reverse:!1},ENERGY_MANAGER:{field:"name",reverse:!1}};scope.order=function(type){var field=angular.isDefined(PREDICATES[type])?PREDICATES[type].field:"name";return function(item){return angular.isDefined(item[field])?item[field]:""}},scope.reverse=function(type){return angular.isDefined(PREDICATES[type])&&angular.isDefined(PREDICATES[type].reverse)?PREDICATES[type].reverse:!1};var menuReferenceObject={activeEntry:null,isOpen:!1};initMenus(),scope.toggleSidebar=function($event,position){$event.stopPropagation(),position===ketaSharedConfig.SIDEBAR.POSITION_LEFT?$rootScope.$broadcast(ketaSharedConfig.EVENTS.TOGGLE_SIDEBAR_LEFT):position===ketaSharedConfig.SIDEBAR.POSITION_RIGHT&&$rootScope.$broadcast(ketaSharedConfig.EVENTS.TOGGLE_SIDEBAR_RIGHT)},scope.additionalUserItemsConfigured=function(){return angular.isDefined(scope.configuration)&&angular.isDefined(scope.configuration.userMenu)&&angular.isDefined(scope.configuration.userMenu.additionalItems)&&scope.configuration.userMenu.additionalItems.length>0},scope.isOpen=function(menuName){return angular.isDefined(scope[menuName])?scope[menuName].isOpen:null},scope.isActive=function(menuName,entry){return angular.isDefined(scope[menuName])&&scope[menuName].activeEntry===entry},scope.toggleOpenState=function(menuName){if(angular.isDefined(scope[menuName])){var currentState=angular.copy(scope[menuName].isOpen);closeAllMenus(),currentState===scope[menuName].isOpen&&(scope[menuName].isOpen=!scope[menuName].isOpen)}},scope.$on("$locationChangeStart",function(){closeAllMenus()}),$document.bind("click",function(event){var worldBarHtml=element.html(),targetElementHtml=angular.element(event.target).html();-1===worldBarHtml.indexOf(targetElementHtml)&&(closeAllMenus(),scope.$digest())})}}});
//# sourceMappingURL=world-bar.min.js.map