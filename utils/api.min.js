/**
 * keta 0.6.4
 * Build 2016-09-16T08:26:35.076Z
 *
 * Copyright Kiwigrid GmbH 2014-2016
 * http://kiwigrid.github.io/keta/
 *
 * Licensed under MIT License
 * https://raw.githubusercontent.com/kiwigrid/keta/master/LICENSE
 */
"use strict";angular.module("keta.utils.Api",[]).constant("ApiUtilsConstants",{OPERATORS:{OR:"$or",AND:"$and",LIKE:"$like"},REGEX:{QUERY_DIVIDER:new RegExp('(".*?"|[^" ]+)+(?= *| *$)',"g"),KEY_DIVIDER:new RegExp('(".*?"|[^":]+)+(?= *| *$)',"g"),QUOTES:new RegExp('"',"g")},CHARS:{QUERY_DIVIDER:":",LIKE_EXTENDER:"*"},NUMBERS:{MAX_COMPONENTS_LENGTH:2}}).factory("ApiUtils",function(ApiUtilsConstants){var factory={},isBlankObject=function(obj){var propertyCount=0;return angular.forEach(obj,function(){propertyCount++}),0===propertyCount},cleanUpQuery=function(query){var cleanedUpQuery=query.replace(ApiUtilsConstants.CHARS.QUERY_DIVIDER+ApiUtilsConstants.CHARS.QUERY_DIVIDER,ApiUtilsConstants.CHARS.QUERY_DIVIDER+'"'+ApiUtilsConstants.CHARS.QUERY_DIVIDER)+'"';return cleanedUpQuery},getQueryComponents=function(query){query=cleanUpQuery(query);var components=query.match(ApiUtilsConstants.REGEX.KEY_DIVIDER),key=components[0].replace(ApiUtilsConstants.REGEX.QUOTES,""),value=angular.isDefined(components[1])?components[1].replace(ApiUtilsConstants.REGEX.QUOTES,""):null;if(components.length>ApiUtilsConstants.NUMBERS.MAX_COMPONENTS_LENGTH){var extendedValues=components.slice(ApiUtilsConstants.NUMBERS.MAX_COMPONENTS_LENGTH,components.length);angular.forEach(extendedValues,function(extendedValue){value+=ApiUtilsConstants.CHARS.QUERY_DIVIDER+extendedValue.replace(ApiUtilsConstants.REGEX.QUOTES,"")})}return{key:key,value:value}},getLikeSearchParam=function(searchString){var likeSearchParam=[];return likeSearchParam[ApiUtilsConstants.OPERATORS.LIKE]=ApiUtilsConstants.CHARS.LIKE_EXTENDER+searchString+ApiUtilsConstants.CHARS.LIKE_EXTENDER,angular.extend({},likeSearchParam)},getCriteriaParams=function(filterString,criteriaMapping){var filters=[];return angular.forEach(criteriaMapping,function(criterion,key){angular.forEach(criteriaMapping,function(comparisonCriterion,comparisonKey){criterion===comparisonCriterion&&key!==comparisonKey&&delete criteriaMapping[comparisonKey]});var container=[];container[criterion]=getLikeSearchParam(filterString),container=angular.extend({},container),filters.push(container)}),filters},mergeParams=function(acrossParams,transformedParams){var params={};return isBlankObject(acrossParams)||isBlankObject(transformedParams)?isBlankObject(acrossParams)?isBlankObject(transformedParams)||(params=angular.extend({},transformedParams)):params=angular.extend({},acrossParams):params[ApiUtilsConstants.OPERATORS.AND]=[angular.extend({},acrossParams),angular.extend({},transformedParams)],params};return factory.getFilterParams=function(filterString,criteriaMapping){var params={};if(angular.isString(filterString)&&angular.isObject(criteriaMapping)&&null!==filterString){var transformedFilter=[],transformedParams={},acrossParams={},queries=filterString.match(ApiUtilsConstants.REGEX.QUERY_DIVIDER);angular.forEach(queries,function(query){var FilterContainer=[],queryComponents=getQueryComponents(query);null!==queryComponents.value?(angular.isDefined(criteriaMapping[queryComponents.key])&&(queryComponents.key=criteriaMapping[queryComponents.key]),FilterContainer[queryComponents.key]=getLikeSearchParam(queryComponents.value),FilterContainer=angular.extend({},FilterContainer),transformedFilter.push(FilterContainer)):isBlankObject(acrossParams)?acrossParams[ApiUtilsConstants.OPERATORS.OR]=getCriteriaParams(queryComponents.key,criteriaMapping):acrossParams[ApiUtilsConstants.OPERATORS.OR]=acrossParams[ApiUtilsConstants.OPERATORS.OR].concat(getCriteriaParams(queryComponents.key,criteriaMapping))}),transformedFilter.length>1?transformedParams[ApiUtilsConstants.OPERATORS.AND]=transformedFilter:transformedParams=angular.extend({},transformedFilter[0]),params=mergeParams(acrossParams,transformedParams)}return params},factory});
//# sourceMappingURL=api.min.js.map