/**
 * keta 0.5.2
 * Build 2016-08-10T13:50:42.870Z
 *
 * Copyright Kiwigrid GmbH 2014-2016
 * http://kiwigrid.github.io/keta/
 *
 * Licensed under MIT License
 * https://raw.githubusercontent.com/kiwigrid/keta/master/LICENSE
 */
"use strict";angular.module("keta.filters.Unit",["keta.services.Tag"]).filter("unit",function($filter,TagConstants){var unitFilter=function(input,configuration){if(!angular.isNumber(input))return input;var precision=0,precisionRanges=[],precisionExcludeIntegers=!1,precisionExclude=[],unit="",isBytes=!1,separate=!1,separated={numberFormatted:null,numberRaw:null,unit:null};angular.isDefined(configuration)&&(precision=angular.isNumber(configuration.precision)?configuration.precision:precision,precisionRanges=angular.isArray(configuration.precisionRanges)?configuration.precisionRanges:precisionRanges,precisionExcludeIntegers=angular.isDefined(configuration.precisionExcludeIntegers)?configuration.precisionExcludeIntegers:precisionExcludeIntegers,precisionExclude=angular.isArray(configuration.precisionExclude)?configuration.precisionExclude:precisionExclude,unit=angular.isDefined(configuration.unit)?configuration.unit:unit,isBytes=angular.isDefined(configuration.isBytes)?configuration.isBytes:isBytes,separate=angular.isDefined(configuration.separate)?configuration.separate:separate);var excludeFromPrecision=precisionExcludeIntegers;excludeFromPrecision||(excludeFromPrecision=-1!==precisionExclude.indexOf(input)),angular.forEach(precisionRanges,function(range){var matching=!0;angular.isDefined(range.min)&&input<range.min&&(matching=!1),angular.isDefined(range.max)&&input>=range.max&&(matching=!1),angular.isDefined(range.min)||angular.isDefined(range.max)||(matching=!1),matching&&angular.isNumber(range.precision)&&(precision=range.precision)}),0===input&&excludeFromPrecision&&(precision=0);var sizes=isBytes?["Bytes","KB","MB","GB","TB"]:["","k","M","G","T"];if(unit===TagConstants.UNIT.EURO||unit===TagConstants.UNIT.KILOMETER||unit===TagConstants.UNIT.DOLLAR||unit===TagConstants.UNIT.POUND)return $filter("number")(input,precision)+" "+unit;var multiplicator=0>input?-1:1,oneKiloByte=1024,oneKilo=1e3,parseBase=10;if(input*=multiplicator,input>=1){var i=parseInt(Math.floor(Math.log(input)/Math.log(isBytes?oneKiloByte:oneKilo)),parseBase),siInput=input/Math.pow(isBytes?oneKiloByte:oneKilo,i)*multiplicator,siInputFixed=excludeFromPrecision?siInput:Number(siInput.toFixed(precision));siInputFixed>=oneKilo&&(i++,siInputFixed/=oneKilo);var inputPieces=String(siInputFixed).split(/\./),inputsCurrentPrecision=inputPieces.length>1?inputPieces[1].length:0;separated.numberFormatted=excludeFromPrecision?$filter("number")(siInputFixed,inputsCurrentPrecision):$filter("number")(siInputFixed,precision),separated.numberRaw=siInputFixed,separated.unit=sizes[i]+unit,input=separated.numberFormatted+(""!==sizes[i]?" "+sizes[i]:"")}else separated.numberFormatted=$filter("number")(input,precision),separated.numberRaw=input,separated.unit=unit,input=separated.numberFormatted;return isBytes||""===unit||(input+=-1===input.indexOf(" ")?" "+unit:unit),separate?separated:input};return unitFilter.$stateful=!0,unitFilter});
//# sourceMappingURL=unit.min.js.map