/**
 * keta 1.11.0
 * Build 2021-04-21T15:24:16.331Z
 *
 * Copyright Kiwigrid GmbH 2014-2021
 * http://kiwigrid.github.io/keta/
 *
 * Licensed under MIT License
 * https://raw.githubusercontent.com/kiwigrid/keta/master/LICENSE
 */
"use strict";angular.module("keta.services.DevicePolling",[]).service("ketaDevicePolling",function($interval,$log,$q,ketaEventBusDispatcher,ketaEventBusManager,ketaDeviceEvent,ketaDeviceSetPollers){var isValid=function(queryReply){return queryReply&&queryReply.code===ketaEventBusDispatcher.RESPONSE_CODE_OK&&angular.isDefined(queryReply.result)&&angular.isDefined(queryReply.result.items)},logFetchQueryReply=function(queryParameters,reply){$log.request(["deviceservice",{action:"getDevices",params:queryParameters},reply],$log.ADVANCED_FORMATTER)},fetchDevices=function(eventBus,queryParameters){var deferred=$q.defer();return ketaEventBusDispatcher.send(eventBus,"deviceservice",{action:"getDevices",params:queryParameters},function(reply){isValid(reply)?(ketaEventBusManager.inDebugMode()&&logFetchQueryReply(reply),deferred.resolve(reply)):logFetchQueryReply(reply)}),deferred.promise},compareGuids=function(thisDevice,thatDevice){return thisDevice.guid<thatDevice.guid?-1:thisDevice.guid>thatDevice.guid?1:0},emitDeletionEvent=function(device,receiver){receiver(ketaDeviceEvent.create(ketaDeviceEvent.DELETED,device))},emitCreationEvent=function(device,receiver){receiver(ketaDeviceEvent.create(ketaDeviceEvent.CREATED,device))},emitUpdateEvent=function(device,receiver){receiver(ketaDeviceEvent.create(ketaDeviceEvent.UPDATED,device))},compareDeviceLists=function(currentDevices,fetchedDevices,changeEventProcessor){for(var c=0,f=0;c<currentDevices.length&&f<fetchedDevices.length;)currentDevices[c].guid<fetchedDevices[f].guid?(emitDeletionEvent(currentDevices[c],changeEventProcessor),c++):currentDevices[c].guid>fetchedDevices[f].guid?(emitCreationEvent(fetchedDevices[f],changeEventProcessor),f++):angular.equals(currentDevices[c],fetchedDevices[f])?(c++,f++):(emitUpdateEvent(fetchedDevices[f],changeEventProcessor),c++,f++);for(;c<currentDevices.length;c++)emitDeletionEvent(currentDevices[c],changeEventProcessor);for(;f<fetchedDevices.length;f++)emitCreationEvent(fetchedDevices[f],changeEventProcessor)};this.pollDevices=function(eventBus,queryParameters,changeEventProcessor,intervalSeconds){intervalSeconds=intervalSeconds||15;var currentDevices;fetchDevices(eventBus,queryParameters).then(function(reply){currentDevices=reply.result.items.sort(compareGuids)});var poller=$interval(function(){fetchDevices(eventBus,queryParameters).then(function(reply){var fetchedDevices=reply.result.items.sort(compareGuids);currentDevices&&compareDeviceLists(currentDevices,fetchedDevices,changeEventProcessor),currentDevices=fetchedDevices})},1e3*intervalSeconds);ketaDeviceSetPollers.add(poller)};var emitTagValues=function(changeEvent,receiver){if(changeEvent.getType()===ketaDeviceEvent.CREATED||changeEvent.getType()===ketaDeviceEvent.UPDATED){var tagValuesObject=changeEvent.getDevice().tagValues;receiver(Object.keys(tagValuesObject).map(function(tagName){return tagValuesObject[tagName]}))}};this.pollTagValues=function(eventBus,queryParameters,tagValuesProcessor,intervalSeconds){this.pollDevices(eventBus,queryParameters,function(changeEvent){emitTagValues(changeEvent,tagValuesProcessor)},intervalSeconds)}});
//# sourceMappingURL=device-polling.min.js.map