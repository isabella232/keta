/**
 * keta 0.4.6
 * Build 2015-08-20T14:56:25.712Z
 *
 * Copyright Kiwigrid GmbH 2014-2015
 * http://kiwigrid.github.io/keta/
 *
 * Licensed under MIT License
 * https://raw.githubusercontent.com/kiwigrid/keta/master/LICENSE
 */
"use strict";angular.module("keta.services.AccessToken",["keta.services.AppContext"]).factory("AccessToken",function($http,AppContext){var accessToken=AppContext.get("oauth.accessToken"),Base64={keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",decode:function(input){var chr1,chr2,chr3,enc1,enc2,enc3,enc4,output="",i=0;for(input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");i<input.length;)enc1=this.keyStr.indexOf(input.charAt(i++)),enc2=this.keyStr.indexOf(input.charAt(i++)),enc3=this.keyStr.indexOf(input.charAt(i++)),enc4=this.keyStr.indexOf(input.charAt(i++)),chr1=enc1<<2|enc2>>4,chr2=(15&enc2)<<4|enc3>>2,chr3=(3&enc3)<<6|enc4,output+=String.fromCharCode(chr1),64!==enc3&&(output+=String.fromCharCode(chr2)),64!==enc4&&(output+=String.fromCharCode(chr3));return Base64.utf8Decode(output)},encode:function(input){var chr1,chr2,chr3,enc1,enc2,enc3,enc4,output="",i=0;for(input=Base64.utf8Encode(input);i<input.length;)chr1=input.charCodeAt(i++),chr2=input.charCodeAt(i++),chr3=input.charCodeAt(i++),enc1=chr1>>2,enc2=(3&chr1)<<4|chr2>>4,enc3=(15&chr2)<<2|chr3>>6,enc4=63&chr3,isNaN(chr2)?enc3=enc4=64:isNaN(chr3)&&(enc4=64),output=output+this.keyStr.charAt(enc1)+this.keyStr.charAt(enc2)+this.keyStr.charAt(enc3)+this.keyStr.charAt(enc4);return output},utf8Decode:function(utfText){for(var string="",i=0,c=0,c2=0,c3=0;i<utfText.length;)c=utfText.charCodeAt(i),128>c?(string+=String.fromCharCode(c),i++):c>191&&224>c?(c2=utfText.charCodeAt(i+1),string+=String.fromCharCode((31&c)<<6|63&c2),i+=2):(c2=utfText.charCodeAt(i+1),c3=utfText.charCodeAt(i+2),string+=String.fromCharCode((15&c)<<12|(63&c2)<<6|63&c3),i+=3);return string},utf8Encode:function(string){string=string.replace(/\r\n/g,"\n");for(var utfText="",n=0;n<string.length;n++){var c=string.charCodeAt(n);128>c?utfText+=String.fromCharCode(c):c>127&&2048>c?(utfText+=String.fromCharCode(c>>6|192),utfText+=String.fromCharCode(63&c|128)):(utfText+=String.fromCharCode(c>>12|224),utfText+=String.fromCharCode(c>>6&63|128),utfText+=String.fromCharCode(63&c|128))}return utfText}},api={get:function(){return accessToken},set:function(token){angular.isDefined(token)&&angular.isString(token)&&(accessToken=token)},decode:function(token){var props={};try{var decoded=Base64.decode(token);-1!==decoded.indexOf("}.")&&(decoded=decoded.substr(0,decoded.indexOf("}.")+1)),props=JSON.parse(decoded)}catch(e){return null}return props},encode:function(props){return Base64.encode(JSON.stringify(props))},refresh:function(){var refreshUrl=AppContext.get("oauth.refreshTokenPath")||"/refreshAccessToken";return $http({method:"GET",url:refreshUrl})}};return api});
//# sourceMappingURL=access-token.min.js.map