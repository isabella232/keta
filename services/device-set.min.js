/**
 * keta 0.7.5
 * Build 2017-02-15T12:05:13.158Z
 *
 * Copyright Kiwigrid GmbH 2014-2017
 * http://kiwigrid.github.io/keta/
 *
 * Licensed under MIT License
 * https://raw.githubusercontent.com/kiwigrid/keta/master/LICENSE
 */
"use strict";angular.module("keta.services.DeviceSet",["keta.services.Device","keta.services.DeviceEvent"]).provider("ketaDeviceSet",function(){var DEFAULT_OFFSET=0,DEFAULT_LIMIT=50;this.$get=function($q,$rootScope,$log,ketaDevice,ketaDeviceEvent,ketaEventBusDispatcher,ketaEventBusManager){var api,DeviceSetInstance=function(givenEventBus){var that=this,eventBus=givenEventBus,params={},registerListener=!1,set={};that.filter=function(filter){return params.filter=filter,that},that.project=function(projection){return params.projection=projection,that},that.sort=function(sorting){return params.sorting=sorting,that},that.paginate=function(pagination){return angular.isDefined(pagination)?(params.offset=angular.isDefined(pagination.offset)?pagination.offset:DEFAULT_OFFSET,params.limit=angular.isDefined(pagination.limit)?pagination.limit:DEFAULT_LIMIT):(params.offset=DEFAULT_OFFSET,params.limit=DEFAULT_LIMIT),that},that.live=function(){return registerListener=!0,that},that.query=function(){var deferred=$q.defer();if(registerListener){var liveHandlerUUID="CLIENT_"+ketaEventBusDispatcher.generateUUID();ketaEventBusDispatcher.registerHandler(eventBus,liveHandlerUUID,function(event){if(!angular.isDefined(event.value.guid)&&angular.isDefined(event.value.tagValues)){var tagValueKeys=Object.keys(event.value.tagValues);event.value.guid=event.value.tagValues[tagValueKeys[0]].guid}api.sync(set,ketaDeviceEvent.create(event.type,event.value),eventBus),ketaEventBusManager.inDebugMode()&&$log.event([event],$log.ADVANCED_FORMATTER)}),ketaEventBusDispatcher.send(eventBus,"deviceservice",{action:"registerDeviceSetListener",body:{filter:params.filter,projection:params.projection,replyAddress:liveHandlerUUID}},function(reply){ketaEventBusManager.inDebugMode()&&$log.request(["deviceservice",{action:"registerDeviceSetListener",body:{filter:params.filter,projection:params.projection,replyAddress:liveHandlerUUID}},reply],$log.ADVANCED_FORMATTER)})}return ketaEventBusDispatcher.send(eventBus,"deviceservice",{action:"getDevices",params:params},function(reply){reply?(reply.params=params,reply.code===ketaEventBusDispatcher.RESPONSE_CODE_OK?(angular.isDefined(reply.result)&&angular.isDefined(reply.result.items)?(angular.forEach(reply.result.items,function(item,index){reply.result.items[index]=ketaDevice.create(eventBus,item)}),set=reply):set={},ketaEventBusManager.inDebugMode()&&$log.request(["deviceservice",{action:"getDevices",params:params},reply],$log.ADVANCED_FORMATTER),deferred.resolve(reply),$rootScope.$digest()):deferred.reject(reply)):deferred.reject("Something bad happened. Got no reply.")}),deferred.promise}};return api={create:function(eventBus){return new DeviceSetInstance(eventBus)},indexOf:function(set,device){var index=-1;return angular.isDefined(set.result)&&angular.isDefined(set.result.items)&&angular.forEach(set.result.items,function(item,key){item.guid===device.guid&&(index=key)}),index},length:function(set){var length=angular.isDefined(set.result)&&angular.isDefined(set.result.items)&&angular.isArray(set.result.items)?set.result.items.length:0;return length},get:function(set,index){var device=angular.isDefined(set.result)&&angular.isDefined(set.result.items)&&angular.isDefined(set.result.items[index])?set.result.items[index]:null;return device},getAll:function(set){var devices=angular.isDefined(set.result)&&angular.isDefined(set.result.items)?set.result.items:[];return devices},sync:function(set,event,eventBus){var modified=!1,device=ketaDevice.create(eventBus,event.getDevice());if(event.getType()===ketaDeviceEvent.CREATED)set.result.items.push(device),modified=!0;else if(event.getType()===ketaDeviceEvent.DELETED)set.result.items.splice(api.indexOf(set,device),1),modified=!0;else if(event.getType()===ketaDeviceEvent.UPDATED){var index=api.indexOf(set,device);index!==-1&&(angular.extend(api.get(set,index),device),modified=!0)}modified&&!$rootScope.$$phase&&$rootScope.$apply()}}}});
//# sourceMappingURL=device-set.min.js.map