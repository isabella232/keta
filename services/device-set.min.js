"use strict";angular.module("keta.services.DeviceSet",["keta.services.Device","keta.services.DeviceEvent","keta.services.EventBusDispatcher"]).provider("DeviceSet",function(){this.$get=function($q,$rootScope,DeviceEvent,EventBusDispatcher){var DeviceSetInstance=function(givenEventBus){var that=this,eventBus=givenEventBus,params={};that.filter=function(filter){return params.filter=filter,that},that.project=function(projection){return params.projection=projection,that},that.sort=function(sorting){return params.sorting=sorting,that},that.paginate=function(pagination){return angular.isDefined(pagination)&&(angular.isDefined(pagination.offset)&&(params.offset=pagination.offset),angular.isDefined(pagination.limit)&&(params.limit=pagination.limit)),that},that.query=function(){var deferred=$q.defer();return EventBusDispatcher.send(eventBus,"devices",{action:"getDevices",params:params},function(reply){reply?(reply.params=params,200===reply.code?(deferred.resolve(reply),$rootScope.$digest()):deferred.reject(reply)):deferred.reject("Something bad happened. Got no reply.")}),deferred.promise}},api={create:function(eventBus){return new DeviceSetInstance(eventBus)},indexOf:function(set,device){var index=-1;return angular.forEach(set.result.items,function(item,key){item.guid===device.guid&&(index=key)}),index},length:function(set){return angular.isDefined(set.result.items)?set.result.items.length:0},get:function(set,index){return angular.isDefined(set.result.items[index])?set.result.items[index]:null},getAll:function(set){return angular.isDefined(set.result.items)?set.result.items:[]},sync:function(set,event){if(event.getType()===DeviceEvent.CREATED)set.result.items.push(event.getDevice());else if(event.getType()===DeviceEvent.DELETED)set.result.items.splice(api.indexOf(set,event.getDevice()),1);else if(event.getType()===DeviceEvent.UPDATED){var index=api.indexOf(set,event.getDevice());-1!==index&&angular.extend(api.get(set,index),event.getDevice())}}};return api}});
//# sourceMappingURL=device-set.min.js.map